buildscript {
    ext {
        springBootVersion = '2.6.6'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.ssafy'
    version '0.0.1'
    sourceCompatibility = '11'
    targetCompatibility = '11'
    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        //webMvc
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        //data jpa
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        //mysql
        implementation 'mysql:mysql-connector-java'

        //querydsl 추가
        implementation 'com.querydsl:querydsl-jpa'
        implementation 'com.querydsl:querydsl-apt'
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"

        //swagger
        implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.6'

        //test
        testImplementation 'org.springframework.security:spring-security-test'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation('org.springframework.boot:spring-boot-starter-test')

        //yml파일 작성 용이
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    }
}
project(':core') {
    bootJar { enabled = false } // core 은 bootJar 로 패키징 할 필요 없음
    jar { enabled = true }

    dependencies {
    }
}

project(':api') {
    bootJar { enabled = true }
    jar { enabled = false }

    dependencies {
        implementation project(':core')

        //jwt, security
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

        //health check
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

        //S3
        implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.1'

        //validation
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        //jwt, security
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

        //firebase sdk, okhttp
        implementation 'com.google.firebase:firebase-admin:8.1.0'
        implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.3'
    }
}

project(':batch') {

    dependencies {
        implementation project(':core')
        implementation 'org.springframework.boot:spring-boot-starter-batch'
        testImplementation 'org.springframework.batch:spring-batch-test'

    }
}

